[
    {
        "pk": 1, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "FizzBuzz", 
            "publicado": true, 
            "slug": "fizzbuzz", 
            "descricao": "<h1>FizzBuzz</h1>\r\n<p>Neste problema, voc\u00ea dever\u00e1 exibir uma lista de 1 a 100, um em cada linha, com as seguintes exce\u00e7\u00f5es:</p>\r\n<ul>\r\n<li>N\u00fameros divis\u00edveis por 3 deve aparecer como 'Fizz' ao inv\u00e9s do n\u00famero;</li>\r\n<li>N\u00fameros divis\u00edveis por 5 devem aparecer como 'Buzz' ao inv\u00e9s do n\u00famero;</li>\r\n<li>N\u00fameros divis\u00edveis por 3 e 5 devem aparecer como 'FizzBuzz' ao inv\u00e9s do n\u00famero'.</li>\r\n</ul>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 2, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Livraria do Harry Potter", 
            "publicado": true, 
            "slug": "livraria-do-harry-potter", 
            "descricao": "<p>Uma livraria cont\u00e9m 7 t\u00edtulos distintos e possui um esquema de descontos que leva em considera\u00e7\u00e3o se \u00e9 o mesmo t\u00edtulo ou n\u00e3o. O problema consiste em calcular o melhor desconto para o cliente.</p>\r\n<pre>Pre\u00e7o de um t\u00edtulo qualquer: R$ 42,00\r\n\r\nDescontos:\r\n        2 livros - 5%\r\n        3 livros - 10%\r\n        4 livros - 15%\r\n        5 livros - 20%\r\n\r\nQuanto custa?\r\n        2 c\u00f3pias do primeiro livro\r\n        2 c\u00f3pias do segundo livro\r\n        2 c\u00f3pias do terceiro livro\r\n        1 c\u00f3pia do quarto livro\r\n        1 c\u00f3pia do quinto livro\r\n\r\nResposta: R$ 268,80\r\n        Note que o pre\u00e7o deve ser o menor valor obtido combinando os livros.\r\n        2 conjuntos de 4 livros \u00e9 melhor que 1 de 5 livros e 1 de 3 livros.\r\n</pre>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 3, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Jokenpo", 
            "publicado": true, 
            "slug": "jokenpo", 
            "descricao": "<p>Jokenpo \u00e9 uma brincadeira japonesa, onde dois jogadores escolhem um dentre tr\u00eas poss\u00edveis itens: Pedra, Papel ou Tesoura.</p>\r\n<p>O objetivo \u00e9 fazer um juiz de Jokenpo que dada a jogada dos dois jogadores informa o resultado da partida.</p>\r\n<p>As regras s\u00e3o as seguintes:</p>\r\n<ul>\r\n<li>Pedra empata com Pedra e ganha de Tesoura</li>\r\n<li>Tesoura empata com Tesoura e ganha de Papel</li>\r\n<li>Papel empata com Papel e ganha de Pedra</li>\r\n</ul>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 4, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Avaliando express\u00f5es matem\u00e1ticas", 
            "publicado": true, 
            "slug": "avaliando-expressoes-matematicas", 
            "descricao": "<p>Dada uma express\u00e3o matem\u00e1tica em nota\u00e7\u00e3o infixa, avalie o seu resultado. Por exemplo:</p>\r\n<ul>\r\n<li>3 * ( 2 + 5 ) = 21</li>\r\n<li>3 * ( 2 + 5 * 2) = 36</li>\r\n</ul>\r\n<p>Dica: Na nota\u00e7\u00e3o infixa usual, os operadores s\u00e3o escritos entre os operandos. Na nota\u00e7\u00e3o posfixa, os operadores s\u00e3o escritos depois dos operandos.</p>\r\n<ul>\r\n<li>Infixa: 3 * ( 2 + 5)</li>\r\n<li>Posfixa: 3 2 5 + *</li>\r\n</ul>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 5, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Jogo da Vida", 
            "publicado": true, 
            "slug": "jogo-da-vida", 
            "descricao": "<p>Desenvolva um algoritmo que execute 'um passo' do Jogo da Vida. As regras s\u00e3o bem simples:</p>\r\n\r\n<ul>\r\n<li>Qualquer c\u00e9lula viva com menos que duas c\u00e9lulas vivas vizinhas morre, por baixa popula\u00e7\u00e3o;</li>\r\n<li>Qualquer c\u00e9lula viva com mais que tr\u00eas c\u00e9lulas vivas vizinhas morre, por alta popula\u00e7\u00e3o;</li>\r\n<li>Qualquer c\u00e9lula viva com duas ou tr\u00eas c\u00e9lulas vivas vizinhas permanece viva para a pr\u00f3xima gera\u00e7\u00e3o;</li>\r\n<li>Qualquer c\u00e9lula morta com exatamente tr\u00eas c\u00e9lulas vivas vizinhas se transforma em uma c\u00e9lula viva;</li>\r\n</ul>\r\n\r\n<p>Voc\u00ea tamb\u00e9m ter\u00e1 que pensar em:</p>\r\n<ul>\r\n<li>Como representar a \u00e1rea do Jogo de uma maneira f\u00e1cil de testar;</li>\r\n<li>Que 'valor' as c\u00e9lulas fora da \u00e1rea do Jogo ter\u00e3o. Ou o Jogo n\u00e3o ter\u00e1 limite de \u00e1rea?</li>\r\n</ul>\r\n\r\n<p>Traduzido e adaptado de: <a href=\"http://sites.google.com/site/tddproblems/all-problems-1/game-of-life\">Game of life</a></p>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 6, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Intersec\u00e7\u00e3o de segmentos de reta", 
            "publicado": true, 
            "slug": "interseccao-de-segmentos-de-reta", 
            "descricao": "<p>Em geometria, um problema comum \u00e9 determinar se duas linhas definidas do ponto A ao B e do C ao D respectivamente, se cruzam.</p>\r\n<p>Desenvolva uma classe Linha2D com as seguintes funcionalidades:</p>\r\n<ul>\r\n<li>Uma linha \u00e9 constru\u00edda fornecendo-se dois pontos A=(x1,y1) e B=(x2,y2);</li>\r\n<li>Uma linha L1 deve ser capaz de responder a quest\u00e3o \"Eu me cruzo com a linha L2?\".</li>\r\n</ul>\r\n<p>Este problema ilustra alguns problemas associados com algoritmos geom\u00e9tricos e com algoritmos de ponto-flutuante/num\u00e9ricos; o que devemos fazer com problemas de arredondamento?</p>\r\n<p>Traduzido e adaptado de: <a href=\"http://sites.google.com/site/tddproblems/all-problems-1/Line-segment-intersection\">Line segment intersection</a></p>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 7, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "N\u00famero de Erdos", 
            "publicado": true, 
            "slug": "numero-de-erdos", 
            "descricao": "<p>O N\u00famero de Erdos \u00e9 uma homenagem prestada ao grande matem\u00e1tico h\u00fangaro <a href=\"http://en.wikipedia.org/wiki/Paul_Erd%C5%91s\">Paul Erdos</a>, que publicou em toda sua vida mais artigos do que qualquer outro matem\u00e1tico trabalhando com centenas de colaboradores. Este n\u00famero, que mede a 'dist\u00e2ncia colaborativa' entre um autor de um artigo e Paul Erdos, \u00e9 calculado da seguinte maneira:</p>\r\n<ul>\r\n<li>Erdos possui o n\u00famero de Erdos igual a 0;</li>\r\n<li>Um matem\u00e1tico M possui esse n\u00famero igual a soma de 1 com o menor n\u00famero de Erdos dos matem\u00e1ticos que escreveram um artigo junto com M;</li>\r\n<li>Aquele(a) que nunca escreveu nenhum artigo com Erdos ou com algum matem\u00e1tico que tenha escrito com Erdos ou com um matem\u00e1tico que escreveu com outro que tenha escrito com Erdos, e assim sucessivamente, tem n\u00famero de Erdos infinito.</li>\r\n</ul>\r\n<p>Existem 511 matem\u00e1ticos com n\u00famero de Erdos igual a 1, ou seja, que escreveram artigos em parceria com Erdos. Os matem\u00e1ticos que escreveram artigos junto com estes, possuem esse n\u00famero igual a 2, os que escreveram artigos junto com estes \u00faltimos, possuem o n\u00famero igual a 3, e assim por diante.</p>\r\n<p>Escreva um programa que, dada uma lista de publica\u00e7\u00f5es e seus autores, calcule o n\u00famero de Erdos de cada autor.</p>\r\n<p>Este problema foi adaptado de <a href=\"http://br.spoj.pl/problems/NUMERDOS/\">http://br.spoj.pl/problems/NUMERDOS/</a>. A descri\u00e7\u00e3o do problema foi reduzida para agilizar o entendimento</a>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 8, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Torres de Hanoi", 
            "publicado": true, 
            "slug": "torres-de-hanoi", 
            "descricao": "<p>Torres de Hanoi &eacute; um quebra-cabe&ccedil;a que consiste em uma base contendo tr&ecirc;s pinos (pino 1, pino 2 e pino 3), onde no pino 1 s&atilde;o dispostos alguns discos empilhados, em ordem crescente de di&acirc;metro (o maior embaixo). O problema consiste em passar todos os discos do pino 1 para o pino 3, usando o pino 2 como auxiliar. O n&uacute;mero de discos pode variar sendo que o mais simples cont&eacute;m apenas tr&ecirc;s.</p>\r\n<p>Resumindo as regras:</p>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>Somente um disco pode ser movido de cada vez;</li>\r\n<li>Nenhum disco pode ficar sobre um disco de di&acirc;metro menor;</li>\r\n<li>Cada movimento consiste em pegar um disco de um pino e coloc&aacute;-lo em outro pino;</li>\r\n<li>S&oacute; &eacute; poss&iacute;vel em cada movimento pegar o &uacute;ltimo disco empilhado em um pino.</li>\r\n</ul>\r\n<p>Implemente um programa que resolva este problema.</p>\r\n<p>Qual o n&uacute;mero m&iacute;nimo de movimentos em que &eacute; poss&iacute;vel resolver o problema de acordo com o n&uacute;mero de pinos iniciais?</p>", 
            "nome_contribuidor": ""
        }
    }, 
    {
        "pk": 9, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Problema do Miojo", 
            "publicado": true, 
            "slug": "problema-do-miojo", 
            "descricao": "<p>Jo\u00e3o \u00e9 um fan\u00e1tico por miojos; ele os adora, e, como era de se esperar, ele levou v\u00e1rios pacotes quando foi acampar com seus colegas. Como Jo\u00e3o s\u00f3 gosta de miojos feitos com o tempo exato, ele se deseperou ao perceber que havia esquecido seu rel\u00f3gio em casa.</p>\r\n\r\n<p>Por sorte, ele conseguiu, no caminho, comprar duas ampulhetas de dura\u00e7\u00f5es diferentes. Por exemplo, se o miojo precisa de 3 minutos para ficar pronto, e Jo\u00e3o tiver uma ampulheta de 5 minutos e outra de 7, uma poss\u00edvel forma de cozinhar o miojo \u00e9:</p>\r\n\r\n<ul>\r\n<li>Jo\u00e3o come\u00e7a virando as duas ampulhetas ao mesmo tempo.</li>\r\n<li>Quando a areia da ampulheta de 5 minutos se esgotar, Jo\u00e3o torna a vir\u00e1-la.</li>\r\n<li>Jo\u00e3o come\u00e7a a preparar o miojo quando a areia da ampulheta de 7 minutos acabar.</li>\r\n<li>Jo\u00e3o tira o miojo do fogo quando a ampulheta de 5 minutos acabar novamente.</li>\r\n<li>Dessa forma, o miojo ficar\u00e1 3 minutos no fogo (do minuto 7 ao minuto 10). Assim, apesar do miojo levar apenas tr\u00eas minutos para ser cozido, ele precisa de 10 minutos para ficar pronto.</li>\r\n</ul>\r\n\r\n<p>Fa\u00e7a um programa que, dado o tempo de preparo do miojo, e os tempos das duas ampulhetas (ambos maiores que o tempo do miojo), determina o tempo m\u00ednimo necess\u00e1rio para o miojo ficar pronto ou se n\u00e3o \u00e9 poss\u00edvel cozinhar o miojo no tempo exato com as ampulhetas dispon\u00edveis.</p>", 
            "nome_contribuidor": "Claudson Oliveira"
        }
    }, 
    {
        "pk": 10, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Par\u00eanteses Booleanos", 
            "publicado": true, 
            "slug": "parenteses-booleanos", 
            "descricao": "<p>Dada uma express\u00e3o booleana, contendo os s\u00edmbolos: 'true', 'false', 'and', 'or' e 'xor', elabore um programa que conte de quantas maneiras \u00e9 poss\u00edvel obter uma resposta ' true', utilizando par\u00eanteses.</p>\r\n<p>Por exemplo, dada a express\u00e3o 'true and false xor true' existe apenas uma maneira de a express\u00e3o retornar 'true': 'true and (false xor true)'</p>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 11, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Contando linhas de c\u00f3digo", 
            "publicado": true, 
            "slug": "contando-linhas-de-codigo", 
            "descricao": "<p>Desenvolva um utilit\u00e1rio que conte o n\u00famero de linhas de c\u00f3digo efetivo em um arquivo-fonte em Java. Considere uma linha se ela n\u00e3o contiver apenas caracteres em branco ou texto dentro de coment\u00e1rios. Alguns exemplos:</p>\r\n<pre>\r\n  -   // This file contains 3 lines of code\r\n  1   public interface Dave {\r\n  -     /**\r\n  -      * count the number of lines in a file\r\n  -      */\r\n  2     int countLines(File inFile); // not the real signature!\r\n  3   }\r\n\r\n  -   /*****\r\n  -   * This is a test program with 5 lines of code\r\n  -   *  \\/* no nesting allowed!\r\n  -   //*****//***/// Slightly pathological comment ending...\r\n  -\r\n  1  public class Hello {\r\n  2      public static final void main(String [] args) { // gotta love Java\r\n  -          // Say hello\r\n  3        System./*wait*/out./*for*/println/*it*/(\"Hello/*\");\r\n  4      }\r\n  -\r\n  5  }\r\n</pre>\r\n<p>Lembre-se que coment\u00e1rios em Java podem ser ou \"//\" at\u00e9 o final de uma linha, ou \"/*\" at\u00e9 encontrar \"*/\". Podem existir m\u00faltiplos \"/*...*/\" coment\u00e1rio em uma linha. Caracteres em branco incluem tabula\u00e7\u00f5es, espa\u00e7\u00f5es e quebras de linha. Coment\u00e1rios dentro de string Java devem ser ignorados.</p>\r\n<p>Traduzido livremente de <a href=\"http://codekata.pragprog.com/2007/01/kata_thirteen_c.html\">http://codekata.pragprog.com/2007/01/kata_thirteen_c.html</a>.", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 12, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Encontrando arquivos duplicados", 
            "publicado": true, 
            "slug": "encontrando-arquivos-duplicados", 
            "descricao": "<p>Quando fazemos o backup de arquivos, como imagens, m\u00fasicas ou v\u00eddeos, um problema comum \u00e9 saber se um determinado arquivo j\u00e1 foi armazenado ou n\u00e3o. A solu\u00e7\u00e3o mais simples \u00e9 fazer o backup de tudo. Isto \u00e9 v\u00e1lido se voc\u00ea tem um espa\u00e7o infinito para armazenar o seu backup. N\u00e3o \u00e9 uma solu\u00e7\u00e3o t\u00e3o boa se voc\u00ea possui um espa\u00e7o limitado, dado que voc\u00ea pode acabar com a mesma foto da \u00faltima viagem de f\u00e9rias em 5 locais diferentes dentro do seu backup.</p>\r\n<p>Uma solu\u00e7\u00e3o para essa duplica\u00e7\u00e3o excessiva de arquivos, \u00e9 encontrar as duplicatas, e apag\u00e1-las. \u00c9 claro que eu preciso <strong>confiar</strong> no software que fa\u00e7a esse procedimento, pois qualquer falha nele pode provocar a perda definitiva de algum dos meus arquivos.</p>\r\n<p>Escreva um algoritmo para encontrar arquivos duplicados utilizando TDD.</p>\r\n<p>Para fazer isso, pense:</p>\r\n<ul>\r\n<li>O que significa que um arquivo \u00e9 id\u00eantico ao outro? Nome, tamanho, conte\u00fado, data de cria\u00e7\u00e3o?</li>\r\n<li>Como voc\u00ea vai fornecer a entrada para o algoritmo? Voc\u00ea deveria usar algum mock para o sistema de arquivos?</li>\r\n<li>Qual a sa\u00edda do algoritmo? Uma lista de arquivos? Alguma outra coisa?</li>\r\n</ul>\r\n<p>Voc\u00ea pode come\u00e7ar aos poucos, tratando somente arquivos tipo texto por exemplo</p>\r\n<p>Adaptado de <a href=\"http://sites.google.com/site/tddproblems/all-problems-1/finding-duplicate-files\">http://sites.google.com/site/tddproblems/all-problems-1/finding-duplicate-files</a></p>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 13, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Encontre o telefone", 
            "publicado": true, 
            "slug": "encontre-o-telefone", 
            "descricao": "<p>Em alguns lugares \u00e9 comum lembrar um n\u00famero do telefone associando seus d\u00edgitos a letras. Dessa maneira a express\u00e3o MY LOVE significa 69 5683. Claro que existem alguns problemas, uma vez que alguns n\u00fameros de telefone n\u00e3o formam uma palavra ou uma frase e os d\u00edgitos 1 e 0 n\u00e3o est\u00e3o associados a nenhuma letra.</p>\r\n<p>Sua tarefa \u00e9 ler uma express\u00e3o e encontrar o n\u00famero de telefone correspondente baseado na tabela abaixo. Uma express\u00e3o \u00e9 composta por letras mai\u00fasculas (A-Z), hifens (-) e os n\u00fameros 1 e 0.</p>\r\n<pre>\r\nLetras  ->  N\u00famero \r\nABC    ->  2 \r\nDEF    ->  3 \r\nGHI    ->  4 \r\nJKL    ->  5 \r\nMNO    ->  6 \r\nPQRS    ->  7 \r\nTUV    ->  8 \r\nWXYZ   ->  9 \r\n</pre>\r\n<p><strong>Entrada</strong></p>\r\n<p>A entrada consiste de um conjunto de express\u00f5es. Cada express\u00e3o est\u00e1 sozinha em uma linha e possui C caracteres, onde 1 \u2264 C \u2264 30. A entrada \u00e9 terminada por fim de arquivo (EOF).</p>\r\n<p><strong>Sa\u00edda</strong></p>\r\n<p>Para cada express\u00e3o voc\u00ea deve imprimir o n\u00famero de telefone correspondente.</p>\r\n\r\n<p><strong>Exemplo de entrada:</strong></p>\r\n<pre>1-HOME-SWEET-HOME \r\nMY-MISERABLE-JOB</pre>\r\n<p><strong>Sa\u00edda correspondente:</strong></p>\r\n<pre>1-4663-79338-4663 \r\n69-647372253-562</pre>\r\n<p>Fonte: <a href=\"http://br.spoj.pl/problems/ENCOTEL/\">http://br.spoj.pl/problems/ENCOTEL/</a>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 14, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "L\u00e2mpadas no corredor", 
            "publicado": true, 
            "slug": "lampadas-no-corredor", 
            "descricao": "<p>Um homem chamado Jos\u00e9 \u00e9 o respons\u00e1vel por ligar e desligar as luzes de um corredor. Cada l\u00e2mpada tem seu pr\u00f3prio interruptor que liga e a desliga. Inicialmente todas as l\u00e2mpadas est\u00e3o desligadas.</p>\r\n<p>Jos\u00e9 faz uma coisa peculiar: se existem n l\u00e2mpadas no corredor, ele caminha at\u00e9 o fim do corredor e volta n vezes. Na i\u00e9sima caminhada, ele aperta apenas os interruptores aos quais sua posi\u00e7\u00e3o \u00e9 divis\u00edvel por i. Ele n\u00e3o aperta nenhum interruptor na volta \u00e0 sua posi\u00e7\u00e3o inicial, apenas na ida. A i\u00e9sima caminhada \u00e9 definida como ir ao fim do corredor e voltar.</p>\r\n<p>Determine qual \u00e9 o estado final de cada l\u00e2mpada. Est\u00e1 ligada ou desligada?</p>\r\n<p>Exemplo:</p>\r\n<pre>\r\nEntrada: 3          \r\nSa\u00edda: [on, off, off]\r\n</pre>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 15, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Intervalos", 
            "publicado": true, 
            "slug": "intervalos", 
            "descricao": "<p>Dado uma lista de n\u00fameros inteiros, agrupe a lista em um conjunto de intervalos</p>\r\n<p>Exemplo:<p>\r\n<p>Entrada: 100, 101, 102, 103, 104, 105, 110, 111, 113, 114, 115, 150</p>\r\n<p>Sa\u00edda: [100-105], [110-111], [113-115], [150]</p>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 16, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Campo Minado", 
            "publicado": true, 
            "slug": "campo-minado", 
            "descricao": "<h1>O problema</h1>\r\n\r\n<p>Voc\u00ea j\u00e1 jogou Campo Minado? \u00c9 um pequeno jogo que vem instalado em um certo Sistema Operacional cujo nome n\u00e3o conseguimos lembrar. O objetivo deste jogo \u00e9 encontrar onde est\u00e3o todas as minas em um campo de tamanho MxN (M e N inteiros). Para te ajudar, para cada posi\u00e7\u00e3o, o jogo exibe o n\u00famero de minas que s\u00e3o adjacentes a ela.</p>\r\n\r\n<p>Por exemplo, suponha o seguinte campo 4x4 com 2 minas (representadas pelo caractere *):</p>\r\n\r\n<pre>\r\n* . . .\r\n* . . .\r\n. . . .\r\n. * . .\r\n. . . .\r\n</pre>\r\n\r\n<p>Representando o mesmo campo, colocando os n\u00fameros de dicas como descrito acima, teremos:</p>\r\n<pre>\r\n* 1 0 0\r\n2 2 1 0\r\n1 * 1 0\r\n1 1 1 0\r\n</pre>\r\n\r\n<p>Como voc\u00ea pode perceber, cada quadrado pode ter at\u00e9 8 quadrados adjacentes.</p>\r\n\r\n<p>Sua tarefa \u00e9, dado a defini\u00e7\u00e3o de um campo (definido por suas dimens\u00f5es e pelo posicionamento das minas), retornar o mesmo campo com as indica\u00e7\u00f5es de n\u00fameros de minas adjacentes em cada posi\u00e7\u00e3o que n\u00e3o contenha uma mina.</p>\r\n\r\n<p>Traduzido e levemente adaptado de: <a href=\"http://online-judge.uva.es/p/v101/10189.html\">http://online-judge.uva.es/p/v101/10189.html</a></p>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 17, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Nomes de Autores de Obras Bibliogr\u00e1ficas", 
            "publicado": true, 
            "slug": "nomes-de-autores-de-obras-bibliograficas", 
            "descricao": "<p>Quando se lista o nome de autores de livros, artigos e outras publica\u00e7\u00f5es \u00e9 comum que se apresente o nome do autor ou dos autores da seguinte forma: sobrenome do autor em letras mai\u00fasculas, seguido de uma v\u00edrgula e da primeira parte do nome apenas com as iniciais mai\u00fasculas.</p>\r\n\r\n<p>Por exemplo:</p>\r\n\r\n<ul>\r\n<li>SILVA, Joao</li>\r\n<li>COELHO, Paulo</li>\r\n<li>ARAUJO, Celso de</li>\r\n</ul>\r\n\r\n<p>Seu desafio \u00e9 fazer um programa que leia um n\u00famero inteiro correspondendo ao n\u00famero de nomes que ser\u00e1 fornecido, e, a seguir, leia estes nomes (que podem estar em qualquer tipo de letra)\r\ne imprima a vers\u00e3o formatada no estilo exemplificado acima.</p>\r\n\r\n</p>As seguintes regras devem ser seguidas nesta formata\u00e7\u00e3o:</p>\r\n\r\n<ul>\r\n<li>o sobrenome ser\u00e1 igual a \u00faltima parte do nome e deve ser apresentado em letras mai\u00fasculas;</li>\r\n<li>se houver apenas uma parte no nome, ela deve ser apresentada em letras mai\u00fasculas (sem v\u00edrgula): se a entrada for \u201c Guimaraes\u201d , a sa\u00edda deve ser \u201c GUIMARAES\u201d;</li>\r\n<li>se a \u00faltima parte do nome for igual a \"FILHO\", \"FILHA\", \"NETO\", \"NETA\", \"SOBRINHO\", \"SOBRINHA\" ou \"JUNIOR\" e houver duas ou mais partes antes, a pen\u00faltima parte far\u00e1 parte do sobrenome. Assim: se a entrada for \"Joao Silva Neto\", a sa\u00edda deve ser \"SILVA NETO, Joao\" ; se a entrada for \"Joao Neto\" , a sa\u00edda deve ser \"NETO, Joao\";</li>\r\n<li>as partes do nome que n\u00e3o fazem parte do sobrenome devem ser impressas com a inicial mai\u00fascula e com as demais letras min\u00fasculas;</li>\r\n<li>\"da\", \"de\", \"do\", \"das\", \"dos\" n\u00e3o fazem parte do sobrenome e n\u00e3o iniciam por letra mai\u00fascula.</li>\r\n</ul>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 18, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Calculando estat\u00edsticas simples", 
            "publicado": true, 
            "slug": "calculando-estatisticas-simples", 
            "descricao": "<p>Sua tarefa \u00e9 processar uma seq\u00fc\u00eancia de n\u00fameros inteiros para determinar as seguintes estat\u00edsticas:</p>\r\n<ul>\r\n<li>Valor m\u00ednimo</li>\r\n<li>Valor m\u00e1ximo</li>\r\n<li>N\u00famero de elementos na seq\u00fc\u00eancia </li>\r\n<li>Valor m\u00e9dio</li>\r\n</ul>\r\n<p>Por exemplo para uma seq\u00fc\u00eancia de n\u00fameros \"6, 9, 15, -2, 92, 11\", temos como sa\u00edda:</p>\r\n<ul>\r\n<li>Valor m\u00ednimo: -2</li>\r\n<li>Valor m\u00e1ximo: 92</li>\r\n<li>N\u00famero de elementos na seq\u00fc\u00eancia: 6</li>\r\n<li>Valor m\u00e9dio: 18.1666666</li>\r\n</ul>\r\n<p>Traduzido de: <a href=\"http://www.cyber-dojo.com/\">http://www.cyber-dojo.com/</a></p>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 19, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Anagramas", 
            "publicado": true, 
            "slug": "anagramas", 
            "descricao": "<p>Escreva um programa que gere todos os anagramas potenciais de uma string.</p>\r\n<p>Por exmplo, os anagramas potenciais de \"biro\" s\u00e3o:</p>\r\n<pre>\r\nbiro bior brio broi boir bori\r\nibro ibor irbo irob iobr iorb\r\nrbio rboi ribo riob roib robi\r\nobir obri oibr oirb orbi orib\r\n</pre>\r\n<p>Traduzido de: <a href=\"http://www.cyber-dojo.com/\">http://www.cyber-dojo.com/</a></p>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 20, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Cheque por Extenso", 
            "publicado": true, 
            "slug": "cheque-por-extenso", 
            "descricao": "<p>Apesar de o volume de cheques emitidos tenha diminu\u00eddo dr\u00e1sticamente nos \u00faltimos anos, principalmente devido a populariza\u00e7\u00e3o dos cart\u00f5es de cr\u00e9dito e d\u00e9bito, eles ainda s\u00e3o utilizados em muitas compras, especialmente a de valores altos. E para auxiliar no seu preenchimento, v\u00e1rios estabelecimentos possuem m\u00e1quinas que dado o valor da compra, preenchem o cheque com o seu valor por extenso.</p>\r\n\r\n<p>Desenvolva um programa que dado um valor monet\u00e1rio, seja retornado o valor em reais por extenso.</p>\r\n\r\n<p>Exemplo:</p>\r\n\r\n<ul>\r\n<li>15415,16 -> quinze mil quatrocentos e quinze reais e dezesseis centavos</li>\r\n<li>0,05 -> cinco centavos</li>\r\n<li>2,25 -> dois reais e vinte e cinco centavos</li>\r\n</ul>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 21, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Ano Bissexto", 
            "publicado": true, 
            "slug": "ano-bissexto", 
            "descricao": "<p>A cada 4 anos, a diferen\u00e7a de horas entre o ano solar e o do calend\u00e1rio convencional completa cerca de 24 horas (mais exatamente: 23 horas, 15 minutos e 864 mil\u00e9simos de segundo). Para compensar essa diferen\u00e7a e evitar um descompasso em rela\u00e7\u00e3o \u00e0s esta\u00e7\u00f5es do ano, insere-se um dia extra no calend\u00e1rio e o m\u00eas de fevereiro fica com 29 dias. Essa corre\u00e7\u00e3o \u00e9 especialmente importante para atividades atreladas \u00e0s esta\u00e7\u00f5es, como a agricultura e at\u00e9 mesmo as festas religiosas.</p>\r\n\r\n<p>Um determinado ano \u00e9 bissexto se:</p>\r\n\r\n<ul>\r\n<li>O ano for divis\u00edvel por 4, mas n\u00e3o divis\u00edvel por 100, exceto se ele for tamb\u00e9m divis\u00edvel por 400.</li>\r\n</ul>\r\n\r\n<p>Exemplos:</p>\r\n\r\n<p>S\u00e3o bissextos por exemplo:</p>\r\n<ul>\r\n<li>1600</li>\r\n<li>1732</li>\r\n<li>1888</li>\r\n<li>1944</li>\r\n<li>2008</li>\r\n</ul>\r\n\r\n<p>N\u00e3o s\u00e3o bissextos por exemplo:</p>\r\n<ul>\r\n<li>1742</li>\r\n<li>1889</li>\r\n<li>1951</li>\r\n<li>2011</li>\r\n</ul>\r\n\r\n<p>Escreva uma fun\u00e7\u00e3o que determina se um determinado ano informado \u00e9 bissexto ou n\u00e3o.</p>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 22, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Troco", 
            "publicado": true, 
            "slug": "troco", 
            "descricao": "<p>Funcion\u00e1rios de empresas comerciais que trabalham como caixa tem uma grande responsabilidade em suas m\u00e3os. A maior parte do tempo de seu expediente de trabalho \u00e9 gasto recebendo valores de clientes e, em alguns casos, fornecendo troco.</p>\r\n\r\n<p>Seu desafio \u00e9 fazer um programa que leia o valor total a ser pago e o valor efetivamente pago, informando o menor n\u00famero de c\u00e9dulas e moedas que devem ser fornecidas como troco.</p>\r\n\r\n<p>Deve-se considerar que h\u00e1:</p>\r\n<ul>\r\n<li>c\u00e9dulas de R$100,00, R$50,00, R$10,00, R$5,00 e R$1,00;</li>\r\n<li>moedas de R$0,50, R$0,10, R$0,05 e R$0,01.</li>\r\n</ul>", 
            "nome_contribuidor": null
        }
    }, 
    {
        "pk": 23, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Matriz Espiral", 
            "publicado": true, 
            "slug": "matriz-espiral", 
            "descricao": "<p>Dado um n\u00famero de colunas e um n\u00famero de linhas, retornar uma matriz em espiral de fora para dentro no sentido hor\u00e1rio.</p>\r\n<p>Varia\u00e7\u00e3o do problema: retorne a espiral no sentido anti-hor\u00e1rio.</p>\r\n\r\n<p>Este problema \u00e9 mais f\u00e1cil de ser compreendido atrav\u00e9s de exemplos:</p>\r\n\r\n<p>Entrada: 3 4</p>\r\n\r\n<p>Sa\u00edda:</p>\r\n<pre style=\"font-family:monospace;\">\r\n 1  2 3\r\n10 11 4\r\n 9 12 5\r\n 8  7 6\r\n</pre>\r\n\r\n<p>Entrada: 5 6</p>\r\n\r\n<p>Sa\u00edda:</p>\r\n<pre style=\"font-family:monospace;\">\r\n 1  2  3  4  5\r\n18 19 20 21  6\r\n17 28 29 22  7\r\n16 27 30 23  8\r\n15 26 25 24  9\r\n14 13 12 11 10\r\n</pre>", 
            "nome_contribuidor": "Eduardo Oliveira de Carvalho"
        }
    }, 
    {
        "pk": 24, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "N\u00fameros Romanos", 
            "publicado": true, 
            "slug": "numeros-romanos", 
            "descricao": "<p>O sistema de numera\u00e7\u00e3o romana (ou n\u00fameros romanos) desenvolveu-se na Roma Antiga e utilizou-se em todo o seu Imp\u00e9rio. Neste sistema as cifras escrevem-se com determinadas letras, que representam os n\u00fameros. As letras s\u00e3o sempre mai\u00fasculas, j\u00e1 que no alfabeto romano n\u00e3o existem as min\u00fasculas, as letras s\u00e3o I, V, X, L, C, D e M.</p>\r\n<p>Sua tarefa \u00e9 desenvolver um programa que converta n\u00fameros indo-ar\u00e1bicos para o formato romano e vice-versa. As regras para a forma\u00e7\u00e3o dos n\u00fameros romanos s\u00e3o apresentadas a seguir.</p>\r\n<p>Cada letra corresponde a um determinado valor:</p>\r\n<ul>\r\n<li>I = 1</li>\r\n<li>V = 5</li>\r\n<li>X = 10</li>\r\n<li>L = 50</li>\r\n<li>C = 100</li>\r\n<li>D = 500</li>\r\n<li>M = 1000</li>\r\n</ul>\r\n<p>Agrupando as letras acima, podemos representar os n\u00fameros de acordo com um conjunto de regras:</p>\r\n<ul>\r\n<li>Com exce\u00e7\u00e3o de V, L e D, os outros numerais podem se repetir no m\u00e1ximo tr\u00eas vezes:<br/>\r\nIII = 3<br/>\r\nXXX = 30<br/>\r\nCCC = 300<br/>\r\nMMM = 3000<br/>\r\n</li>\r\n<li>Quando escritos \u00e0 direita de numerais maiores, I, X e C somam-se aos valores dos primeiros:<br/>\r\nVIII = 5 + 1 + 1 + 1 = 8<br/>\r\nLXII = 50 + 10 + 1 + 1 = 62<br/>\r\nCLVIII = 158<br/>\r\nMCXX = 1000 + 100 + 10 + 10 = 1120<br/>\r\n</li>\r\n<li>Mas se os numerais I, X e C estiverem \u00e0 esquerda dos maiores, seus valores s\u00e3o subtra\u00eddos como, por exemplo, em:<br/>\r\nIV = 5 - 1 = 4<br/>\r\nIX = 10 - 1 = 9<br/>\r\nXC = 100 - 10 = 90<br/>\r\n</li>\r\n</ul>", 
            "nome_contribuidor": "Eduardo Oliveira de Carvalho"
        }
    }, 
    {
        "pk": 25, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Analisando URLs", 
            "publicado": true, 
            "slug": "analisando-urls", 
            "descricao": "<p>Dada uma URL, desenvolva um programa que indique se a URL \u00e9 v\u00e1lida ou n\u00e3o e, caso seja v\u00e1lida, retorne as suas partes constituintes.</p>\r\n<p>Exemplos:</p>\r\n<ul>\r\n<li>Entrada: http://www.google.com/mail/user=fulano<br/>\r\nSa\u00edda:<br/>\r\nprotocolo: http<br/>\r\nhost: www<br/>\r\ndom\u00ednio: google.com<br/>\r\npath: mail<br/>\r\npar\u00e2metros: user=fulano</li>\r\n<li>Entrada: ssh://fulano%senha@git.com/<br/>\r\nSa\u00edda:<br/>\r\nprotocolo: ssh<br/>\r\nusu\u00e1rio: fulano<br/>\r\nsenha: senha<br/>\r\ndominio: git.com</li>", 
            "nome_contribuidor": "Eduardo Oliveira de Carvalho"
        }
    }, 
    {
        "pk": 26, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "N\u00fameros Felizes", 
            "publicado": true, 
            "slug": "numeros-felizes", 
            "descricao": "<p>Para saber se um n\u00famero \u00e9 feliz, voc\u00ea deve obter o quadrado de cada d\u00edgito deste n\u00famero, em seguida voc\u00ea faz a soma desses resultados. A seguir o mesmo procedimento deve ser feito com o valor resultante desta soma. Se ao repetir o procedimento diversas vezes obtivermos o valor 1, o n\u00famero inicial \u00e9 considerado feliz.</p>\r\n<p>Tomamos o 7, que \u00e9 um n\u00famero feliz:</p>\r\n7\u00b2 = 49<br/>\r\n4\u00b2 + 9\u00b2 = 97<br/>\r\n9\u00b2 + 7\u00b2 = 130<br/>\r\n1\u00b2 + 3\u00b2 + 0\u00b2 = 10<br/>\r\n1\u00b2 + 0\u00b2 = 1\r\n<p>Podemos observar nesse exemplo que os n\u00fameros 49, 97, 130 e 10 tamb\u00e9m s\u00e3o felizes. Existem infinitos n\u00fameros felizes.</p>\r\n<p>E um n\u00famero triste? Como sabemos que um n\u00famero n\u00e3o ser\u00e1 feliz?</p>\r\n<p>Desenvolva um programa que determine se um n\u00famero \u00e9 feliz ou triste.</p>", 
            "nome_contribuidor": "Marianna Reis"
        }
    }, 
    {
        "pk": 27, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Caixa Eletr\u00f4nico", 
            "publicado": true, 
            "slug": "caixa-eletronico", 
            "descricao": "<p>Desenvolva um programa que simule a entrega de notas quando um cliente efetuar um saque em um caixa eletr\u00f4nico. Os requisitos b\u00e1sicos s\u00e3o os seguintes:</p>\r\n<ul>\r\n<li>Entregar o menor n\u00famero de notas;</li>\r\n<li>\u00c9 poss\u00edvel sacar o valor solicitado com as notas dispon\u00edveis;</li>\r\n<li>Saldo do cliente infinito;</li>\r\n<li>Quantidade de notas infinito (pode-se colocar um valor finito de c\u00e9dulas para aumentar a dificuldade do problema);</li>\r\n<li>Notas dispon\u00edveis de R$ 100,00; R$ 50,00; R$ 20,00 e R$ 10,00</li>\r\n</ul>\r\n<p>Exemplos:<p>\r\n<ul>\r\n<li>Valor do Saque: R$ 30,00 \u2013 Resultado Esperado: Entregar 1 nota de R$20,00 e 1 nota de R$ 10,00.</li>\r\n<li>Valor do Saque: R$ 80,00 \u2013 Resultado Esperado: Entregar 1 nota de R$50,00 1 nota de R$ 20,00 e 1 nota de R$ 10,00.\r\n</ul>", 
            "nome_contribuidor": ""
        }
    }, 
    {
        "pk": 28, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "OCR Banc\u00e1rio", 
            "publicado": true, 
            "slug": "ocr-bancario", 
            "descricao": "<p>Voc&ecirc; trabalha para um banco, que recentemente comprou uma m&aacute;quina muito engenhosa para auxiliar na leitura de cartas e faxes enviados para o escrit&oacute;rio-central. Esta m&aacute;quina escaneia os documentos em papel e produz um arquivo com um grande n&uacute;mero de entradas, sendo que cada uma tem este formato:</p>\r\n<pre style=\"font-family: Monospace, 'courier new', courier; line-height: 12px;\">     _  _       _   _  _   _   _\r\n  |  _| _| |_| |_  |_   | |_| |_|\r\n  | |_  _|   |  _| |_|  | |_|  _|\r\n</pre>\r\n<p>Cada entrada possui 4 linhas, e cada linha possui 27 caracteres. As 3 primeiras linhas cont&eacute;m o n&uacute;mero da conta, utilizando pipes e underscores, e a quarta linha &eacute; vazia. Cada n&uacute;mero de conta possui nove d&iacute;gitos (entre 0 e 9). Cada arquivo pode conter at&eacute; 500 registros. Sua tarefa &eacute; desenvolver um programa que obtenha esse arquivo e devolva a lista de contas.</p>\r\n<p>Tradu&ccedil;&atilde;o livre de <a href=\"http://www.codingdojo.org/cgi-bin/wiki.pl?KataBankOCR\">http://www.codingdojo.org/cgi-bin/wiki.pl?KataBankOCR</a></p>", 
            "nome_contribuidor": ""
        }
    }, 
    {
        "pk": 29, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Palavras Primas", 
            "publicado": true, 
            "slug": "palavras-primas", 
            "descricao": "<p>Um n\u00famero primo \u00e9 definido se ele possuir exatamente dois divisores: o n\u00famero um e ele pr\u00f3prio. S\u00e3o exemplos de n\u00fameros primos: 2, 3, 5, 101, 367 e 523.</p>\r\n<p>Neste problema, voc\u00ea deve ler uma palavra composta somente por letras [a-zA-Z]. Cada letra possui um valor espec\u00edfico, a vale 1, b vale 2 e assim por diante, at\u00e9 a letra z que vale 26. Do mesmo modo A vale 27, B vale 28, at\u00e9 a letra Z que vale 52.</p>\r\n<p>Voc\u00ea precisa definir se cada palavra em um conjunto de palavras \u00e9 prima ou n\u00e3o. Para ela ser prima, a soma dos valores de suas letras deve ser um n\u00famero primo.</p>", 
            "nome_contribuidor": "Marianna Reis"
        }
    }, 
    {
        "pk": 30, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Produto Escalar de Vetores", 
            "publicado": true, 
            "slug": "produto-escalar-de-vetores", 
            "descricao": "<p>Definimos dois vetores <strong>A</strong> e <strong>B</strong> de dimens&atilde;o <strong>n</strong> em termos de componentes como:</p>\r\n<p>A = (a1, a2, a3, ..., an) e B = (b1, b2, b3, ..., bn)</p>\r\n<p>O produto escalar entre esses vetores &eacute; descrito como:</p>\r\n<p>A . B = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn</p>\r\n<p>Desenvolva um programa que, dado dois vetores de dimens&atilde;o <strong>n</strong>, retorne o produto escalar entre eles.</p>", 
            "nome_contribuidor": "Marianna Reis"
        }
    }, 
    {
        "pk": 31, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Roleta Romana", 
            "publicado": true, 
            "slug": "roleta-romana", 
            "descricao": "<p>O historiador Flavius Josephus relatou como, no confilto Romano-Judaico em 67 D.C., os romanos tomaram a cidade de Jotapata, onde ele era o comandantes. Escapando, Josephus se encontrou preso em uma caverna com mais 40 companheiros. Os romanos descobriram o esconderijo e fizeram um convite para que ele se rendessem, mas seus companheiros se recusaram a permitir que ele fizesse isso. Ele ent\u00e3o sugeriu que todos fizessem um suic\u00eddio coletivo, onde pela ordem decidida por todos, um por um seria morto pelo outro.</p>\r\n\r\n<p>Todos ficaram em c\u00edrculo e, come\u00e7ando em um determinado ponto, em sentido hor\u00e1rio, cada terceira pessoa seria morta. O \u00fanico sobrevivente foi Sojephus, que se rendeu aos romanos. Isso nos leva a quest\u00e3o: Josephus j\u00e1 sabia exatamente onde ficar para que fosse o \u00fanico sobrevivente?</p>\r\n\r\n<p>Para se preparar para uma situa\u00e7\u00e3o como essa, escreva um programa que determine qual posi\u00e7\u00e3o voc\u00ea deve ficar no c\u00edrculo para poder sobreviver. Voc\u00ea dever\u00e1 informar a quantidade de pessoas no c\u00edrculo (n > 0), a posi\u00e7\u00e3o da pessoa que ir\u00e1 come\u00e7ar o suic\u00eddio (1 <= i <= n) e o \"passo\", isto \u00e9, de quantas em quantas pessoas, dever\u00e1 ser morta (k > 0)</p>\r\n\r\n<ul>\r\n<li>n > 0 pessoas s\u00e3o organizada em um c\u00edrculo, numeradas de 1 a n em sentido hor\u00e1rio;</li>\r\n<li>Iniciando na pessoa i, conta-se no sentido hor\u00e1rio, at\u00e9 que se chegue na pessoa de valor k (k > 0), que \u00e9 rapidamente morta.</li>\r\n<li>Continuamos a contar k pessoas no sentido hor\u00e1rio, a partir da pessoa a esquerda da que foi morta.</li>\r\n<li>Esse processo \u00e9 repetido indefinidamente, at\u00e9 que apenas uma pessoa seja a sobrevivente.</li>\r\n</ul>\r\n\r\n<p>Por exemplo quando n = 5, k = 2 e i = 1, a ordem de execu\u00e7\u00f5es \u00e9 2, 5, 3, e 1. O sobrevivente \u00e9 4.</p>", 
            "nome_contribuidor": "Marianna Reis"
        }
    }, 
    {
        "pk": 32, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Contando as letras dos n\u00fameros", 
            "publicado": true, 
            "slug": "contando-as-letras-dos-numeros", 
            "descricao": "<p id=\"aeaoofnhgocdbnbeljkmbjdmhbcokfdb-mousedown\">Se os n&uacute;meros de 1 a 5 fossem escritos em palavras: um, dois, tr&ecirc;s, quatro, cinco, ent&atilde;o ter&iacute;amos utilizado 2 + 4 + 4 + 6 + 5 = 21 letras no total.</p>\r\n<p>Se todos os n&uacute;meros de 1 at&eacute; 1000 fossem escritos em palavras, quantas letras n&oacute;s ter&iacute;amos utilizado?</p>\r\n<p>&nbsp;</p>\r\n<p>Traduzido e adaptado de:&nbsp;<a href=\"http://projecteuler.net/index.php?section=problems&amp;id=17\">http://projecteuler.net/index.php?section=problems&amp;id=17</a></p>", 
            "nome_contribuidor": ""
        }
    }, 
    {
        "pk": 33, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Analisando a conjectura de Collatz", 
            "publicado": true, 
            "slug": "analisando-a-conjectura-de-collatz", 
            "descricao": "<p>Para definir uma seq&uuml;&ecirc;ncia a partir de um n&uacute;mero inteiro o positivo, temos as seguintes regras:</p>\r\n<p><var>n</var>&nbsp;<img src=\"http://projecteuler.net/images/symbol_maps.gif\" border=\"0\" alt=\"&rarr;\" width=\"15\" height=\"7\" />&nbsp;<var>n</var>/2 (<var>n</var>&nbsp;&eacute; par)</p>\r\n<p id=\"aeaoofnhgocdbnbeljkmbjdmhbcokfdb-mousedown\"><var>n</var>&nbsp;<img src=\"http://projecteuler.net/images/symbol_maps.gif\" border=\"0\" alt=\"&rarr;\" width=\"15\" height=\"7\" />&nbsp;3<var>n</var>&nbsp;+ 1 (<var>n</var>&nbsp;&eacute; &iacute;mpar)</p>\r\n<p>Usando a regra acima e iniciando com o n&uacute;mero 13, geramos a seguinte seq&uuml;&ecirc;ncia:</p>\r\n<div>13&nbsp;<img src=\"http://projecteuler.net/images/symbol_maps.gif\" border=\"0\" alt=\"&rarr;\" width=\"15\" height=\"7\" />&nbsp;40&nbsp;<img src=\"http://projecteuler.net/images/symbol_maps.gif\" border=\"0\" alt=\"&rarr;\" width=\"15\" height=\"7\" />&nbsp;20&nbsp;<img src=\"http://projecteuler.net/images/symbol_maps.gif\" border=\"0\" alt=\"&rarr;\" width=\"15\" height=\"7\" />&nbsp;10&nbsp;<img src=\"http://projecteuler.net/images/symbol_maps.gif\" border=\"0\" alt=\"&rarr;\" width=\"15\" height=\"7\" />&nbsp;5&nbsp;<img src=\"http://projecteuler.net/images/symbol_maps.gif\" border=\"0\" alt=\"&rarr;\" width=\"15\" height=\"7\" />&nbsp;16&nbsp;<img src=\"http://projecteuler.net/images/symbol_maps.gif\" border=\"0\" alt=\"&rarr;\" width=\"15\" height=\"7\" />&nbsp;8&nbsp;<img src=\"http://projecteuler.net/images/symbol_maps.gif\" border=\"0\" alt=\"&rarr;\" width=\"15\" height=\"7\" />&nbsp;4&nbsp;<img src=\"http://projecteuler.net/images/symbol_maps.gif\" border=\"0\" alt=\"&rarr;\" width=\"15\" height=\"7\" />&nbsp;2&nbsp;<img src=\"http://projecteuler.net/images/symbol_maps.gif\" border=\"0\" alt=\"&rarr;\" width=\"15\" height=\"7\" />&nbsp;1</div>\r\n<p>Podemos ver que esta seq&uuml;&ecirc;ncia (iniciando em 13 e terminando em 1) cont&eacute;m 10 termos. Embora ainda n&atilde;o tenha sido provado (este problema &eacute; conhecido como Problema de Collatz), sabemos que com qualquer n&uacute;mero que voc&ecirc; come&ccedil;ar, a seq&uuml;&ecirc;ncia resultante chega no n&uacute;mero 1 em algum momento.</p>\r\n<p>Desenvolva um programa que descubra qual o n&uacute;mero inicial entre 1 e 1 milh&atilde;o que produz a maior seq&uuml;&ecirc;ncia.</p>\r\n<p>&nbsp;</p>\r\n<p class=\"info\">Traduzido e adaptado de:&nbsp;<a href=\"http://projecteuler.net/index.php?section=problems&amp;id=14\">http://projecteuler.net/index.php?section=problems&amp;id=14</a></p>", 
            "nome_contribuidor": ""
        }
    }, 
    {
        "pk": 34, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Nuvem de Cinzas", 
            "publicado": true, 
            "slug": "nuvem-de-cinzas", 
            "descricao": "<p>Um vulc&atilde;o acaba de entrar em erup&ccedil;&atilde;o, provocando uma nuvem de cinzas que se alastra impedindo a circula&ccedil;&atilde;o a&eacute;rea. O governo est&aacute; muito preocupado e deseja saber quando que a nuvem de cinzas ir&aacute; atingir todos os aeroportos do pa&iacute;s.</p>\r\n<p>Est&aacute; dispon&iacute;vel um mapa detalhando a situa&ccedil;&atilde;o atual. O mapa &eacute; retangular, dividido em pequenos quadrados. Neste mapa existem tr&ecirc;s tipos de quadrados: nuvem (indicando que esta regi&atilde;o do mapa j&aacute; est&aacute; coberto por nuvens), aeroportos (indicando a localiza&ccedil;&atilde;o de um aeroporto) e todas as outras (indicando locais onde a nuvem ainda n&atilde;o chegou).</p>\r\n<p>A cada dia, a nuvem expande-se um quadrado na horizontal e um quadrado na vertical. Ou seja, ao fim de cada dia, todos os quadrados adjacentes (vertical ou horizontalmente) a uma nuvem, tamb&eacute;m passam a conter nuvens. Por exemplo:</p>\r\n<pre style=\"font-family: Monospace, 'courier new', courier; line-height: 12px;\">. . * . . . * *      . * * * . * * *     * * * * * * * *\r\n. * * . . . . .      * * * * . . * *     * * * * * * * *\r\n* * * . A . . A      * * * * A . . A     * * * * * . * *\r\n. * . . . . . .  -&gt;  * * * . . . . .  -&gt; * * * * . . . .\r\n. * . . . . A .      * * * . . . A .     * * * * . . A .\r\n. . . A . . . .      . * . A . . . .     * * * A . . . .\r\n. . . . . . . .      . . . . . . . .     . * . . . . . .\r\n     Dia 1                Dia 2               Dia 3\r\n</pre>\r\n<p>Para preparar os planos de conting&ecirc;ncia, o governo necessita saber: quantos dias demorar&aacute; para ao menos um aeroporto ficar coberto pelas nuvens&nbsp;e daqui quantos dias todos os aeroportos estar&atilde;o cobertos pelas nuvens.</p>\r\n<p>Dados um quadriculado com L linhas e C colunas, al&eacute;m da indica&ccedil;&atilde;o inicial das nuvens e dos aeroportos, desenvolva uma programa que informe o n&uacute;mero de dias at&eacute; um primeiro aeroporto ficar debaixo da nuvem de cinzas e o n&uacute;mero de dias at&eacute; que todos os aeroportos ficarem cobertos pelas cinzas.</p>\r\n<p>&nbsp;</p>\r\n<p>Fonte:&nbsp;<a href=\"http://www.dcc.fc.up.pt/oni/problemas/2010/qualificacao/probB.html\">http://www.dcc.fc.up.pt/oni/problemas/2010/qualificacao/probB.html</a></p>", 
            "nome_contribuidor": ""
        }
    }, 
    {
        "pk": 35, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Quadrados e C\u00edrculos", 
            "publicado": true, 
            "slug": "quadrados-e-circulos", 
            "descricao": "<p>Imagine que voc&ecirc; possui um quadrado e um c&iacute;rculo em um plano. Eles podem ser tangentes entre si, um pode estar dentro do outro, ou podem se sobrepor apenas parcialmente.</p>\r\n<p>Sua tarefa &eacute; desenvolver um programa que, dado as coordenadas cartesianas de um quadrado e de um c&iacute;rculo, determine qual a &aacute;rea comum &agrave;s duas figuras.</p>\r\n<p>Definimos um c&iacute;rculo a partir do seu raio <strong>R</strong> e das coordenadas cartesianas do centro <strong>(X, Y)</strong>.</p>\r\n<p>Definimos um quadrado a partir das coordenadas cartesianas do seu v&eacute;rtice superior esquerdo <strong>(X, Y)</strong> e do tamanho do seu lado <strong>L</strong>.</p>", 
            "nome_contribuidor": ""
        }
    }, 
    {
        "pk": 36, 
        "model": "problemas.problema", 
        "fields": {
            "titulo": "Ladrilhando", 
            "publicado": true, 
            "slug": "ladrilhando", 
            "descricao": "<p>Um arquiteto gosta muito de projetar salas em formato quadrangular, que normalmente n&atilde;o s&atilde;o t&atilde;o complicadas de se construir, exceto quando os lados n&atilde;o s&atilde;o perpendiculares uns aos outros. Nestes casos, na hora de ladrilhar as salas, existe uma dificuldade em saber o n&uacute;mero exato de ladrilhos retangulares que dever&atilde;o ser utilizados para n&atilde;o haver desperd&iacute;cio dos ladrilhos que devem ser cortados para se ajustar o ch&atilde;o &agrave;s paredes.</p>\r\n<ul>\r\n<li>Uma sala &eacute; definida pelos pontos (0, 0), (A, 0), (B, C) e (D, E) onde todas as coordenadas (A, B, C, D e E) s&atilde;o inteiros maiores que zero;</li>\r\n<li>Os v&eacute;rtices&nbsp;(B, C) e (D, E) n&atilde;o s&atilde;o coincidentes;</li>\r\n<li>Um ladrinho possui dimens&otilde;es F x G (com F e G inteiros maior que zero);</li>\r\n<li>A parte n&atilde;o utilizada de um ladrilho cortado &eacute; jogada fora (mesmo que pudesse ser reutilizada em outra parte da sala);</li>\r\n<li>Os ladrilhos come&ccedil;am a ser posicionados a partir da posi&ccedil;&atilde;o (0, 0) perpendiculares &agrave; parede formada por (0, 0) e (A, 0).</li>\r\n</ul>\r\n<p>Voc&ecirc; deve ajudar este arquiteto desenvolvendo um programa que, dado as coordenadas da sala e o tamanho dos ladrilhos, retorne a quantidade exata de ladrilhos que ser&atilde;o suficientes para cobrir toda a sala.</p>", 
            "nome_contribuidor": ""
        }
    }, 
    {
        "pk": 2474, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-17", 
            "problema": 13
        }
    }, 
    {
        "pk": 2475, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-17", 
            "problema": 4
        }
    }, 
    {
        "pk": 2476, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-18", 
            "problema": 1
        }
    }, 
    {
        "pk": 2477, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-18", 
            "problema": 17
        }
    }, 
    {
        "pk": 2478, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-21", 
            "problema": 1
        }
    }, 
    {
        "pk": 2479, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-21", 
            "problema": 3
        }
    }, 
    {
        "pk": 2480, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-22", 
            "problema": 3
        }
    }, 
    {
        "pk": 2481, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-22", 
            "problema": 3
        }
    }, 
    {
        "pk": 2482, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-23", 
            "problema": 3
        }
    }, 
    {
        "pk": 2483, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-23", 
            "problema": 13
        }
    }, 
    {
        "pk": 2484, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-24", 
            "problema": 13
        }
    }, 
    {
        "pk": 2485, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-24", 
            "problema": 5
        }
    }, 
    {
        "pk": 2486, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-24", 
            "problema": 19
        }
    }, 
    {
        "pk": 2487, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-25", 
            "problema": 3
        }
    }, 
    {
        "pk": 2488, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-25", 
            "problema": 22
        }
    }, 
    {
        "pk": 2489, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-30", 
            "problema": 22
        }
    }, 
    {
        "pk": 2492, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-31", 
            "problema": 23
        }
    }, 
    {
        "pk": 2493, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-31", 
            "problema": 23
        }
    }, 
    {
        "pk": 2494, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-31", 
            "problema": 7
        }
    }, 
    {
        "pk": 2495, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-31", 
            "problema": 7
        }
    }, 
    {
        "pk": 2496, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-31", 
            "problema": 7
        }
    }, 
    {
        "pk": 2497, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-31", 
            "problema": 23
        }
    }, 
    {
        "pk": 2498, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-01-31", 
            "problema": 23
        }
    }, 
    {
        "pk": 2501, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-01", 
            "problema": 7
        }
    }, 
    {
        "pk": 2502, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-02", 
            "problema": 17
        }
    }, 
    {
        "pk": 2503, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-03", 
            "problema": 18
        }
    }, 
    {
        "pk": 2504, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-04", 
            "problema": 9
        }
    }, 
    {
        "pk": 2505, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-08", 
            "problema": 13
        }
    }, 
    {
        "pk": 2506, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-09", 
            "problema": 20
        }
    }, 
    {
        "pk": 2507, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-09", 
            "problema": 13
        }
    }, 
    {
        "pk": 2508, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-12", 
            "problema": 13
        }
    }, 
    {
        "pk": 2509, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-15", 
            "problema": 5
        }
    }, 
    {
        "pk": 2510, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-15", 
            "problema": 14
        }
    }, 
    {
        "pk": 2511, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-17", 
            "problema": 10
        }
    }, 
    {
        "pk": 2512, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-21", 
            "problema": 10
        }
    }, 
    {
        "pk": 2513, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-23", 
            "problema": 2
        }
    }, 
    {
        "pk": 2514, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-23", 
            "problema": 32
        }
    }, 
    {
        "pk": 2515, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-24", 
            "problema": 28
        }
    }, 
    {
        "pk": 2516, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-24", 
            "problema": 28
        }
    }, 
    {
        "pk": 2517, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-25", 
            "problema": 35
        }
    }, 
    {
        "pk": 2518, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-26", 
            "problema": 26
        }
    }, 
    {
        "pk": 2519, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-28", 
            "problema": 21
        }
    }, 
    {
        "pk": 2520, 
        "model": "problemas.problemautilizado", 
        "fields": {
            "data_utilizacao": "2011-02-28", 
            "problema": 1
        }
    }
]